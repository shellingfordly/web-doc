"use strict";(self.webpackChunkweb_doc=self.webpackChunkweb_doc||[]).push([[146],{582:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a={key:"v-240d5962",path:"/tools/webpack/",title:"webpack",lang:"en-US",frontmatter:{sidebar:"auto",categories:["tools","webpack"]},excerpt:"",headers:[{level:2,title:"命令",slug:"命令",children:[]},{level:2,title:"配置",slug:"配置",children:[{level:3,title:"多文件",slug:"多文件",children:[]},{level:3,title:"webpack-dev-server",slug:"webpack-dev-server",children:[]},{level:3,title:"webpack-dev-middleware",slug:"webpack-dev-middleware",children:[]},{level:3,title:"clean-webpack-plugin",slug:"clean-webpack-plugin",children:[]},{level:3,title:"webpack.DefinePlugin",slug:"webpack-defineplugin",children:[]}]},{level:2,title:"打包 vue",slug:"打包-vue",children:[]},{level:2,title:"不同环境配置文件",slug:"不同环境配置文件",children:[]},{level:2,title:"code spliting",slug:"code-spliting",children:[]},{level:2,title:"loader",slug:"loader",children:[{level:3,title:"loader 实现",slug:"loader-实现",children:[]}]},{level:2,title:"问题",slug:"问题",children:[{level:3,title:"webpack 问题",slug:"webpack-问题",children:[]}]}]}},4446:(n,s,e)=>{e.r(s),e.d(s,{default:()=>r});const a=(0,e(6252).uE)('<h1 id="webpack" tabindex="-1"><a class="header-anchor" href="#webpack" aria-hidden="true">#</a> webpack</h1><ul><li>可以解析</li></ul><h2 id="命令" tabindex="-1"><a class="header-anchor" href="#命令" aria-hidden="true">#</a> 命令</h2><ul><li>npx webpack -v 查看 webpack 版本</li><li>npx webpack xxx.js 打包某文件</li></ul><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><ul><li>mode 配置打包模式 <ul><li>development 开发环境</li></ul></li><li>entry 入口文件</li><li>output 打包输出地址 <ul><li>filename 打包后文件名</li><li>path 必须为绝对路径</li></ul></li><li>module 处理非 js 的其他文件 <ul><li>rules 配置规则 <ul><li>test 匹配文件</li><li>use 使用插件 <ul><li>loader 插件名 <ul><li>loader 从右向左，从下往上的顺序使用</li></ul></li><li>options 对 loader 的配置 <ul><li>limit 限制大小</li><li>name 打包文件的 name</li></ul></li></ul></li></ul></li></ul></li></ul><p>webpack.config.js</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module.exports = {\n  mode: &quot;development&quot;,\n  entry: &#39;./src/index.js&#39;\n  output: {\n    filename: &#39;js/index.js&#39;,\n    path: path.join(__dirname, &#39;./dist&#39;)\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.(gif|png|jpg)$/, // 匹配gif\n        use: [\n          // 第三方处理插件\n          {\n            loader: &#39;url-loader&#39;,\n            options: {\n              limit: 8192, // 小雨8k\n              name: &#39;[name][hash:8].[ext]&#39; // 文件名+8位hash值\n            }\n          },\n        ],\n      },\n      {\n        test: /\\.(css|less)$/,\n        // loader从右向左的顺序使用\n        use: [\n          &#39;style-loader&#39;,\n          &#39;css-loader&#39;,\n          &#39;less-loader&#39;,\n          &#39;postcss-loader&#39;\n        ],\n      }\n    ]\n  },\n  plugins: [\n    new MiniCssExtractPlugin({\n      filename: &#39;[name].css&#39;\n    })\n  ]\n};\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><ul><li>loader <ul><li>MiniCssExtractPlugin.loader 生成 css 文件，与 style-loader 冲突</li><li>style-loader 生成 style 文件，插入 css</li><li>css-loader 处理 css 文件</li><li>postcss-loader 处理 css3 兼容前缀 <ul><li>autoprefixer 自动添加 css3 兼容前缀插件</li></ul></li></ul></li></ul><p>// postcss.config.js</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module.exports = {\n  plugins: [require(&quot;autoprefixer&quot;)],\n};\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>插件 <ul><li>mini-css-extract-plugin 打包 css 为一个文件 <ul><li>new MiniCssExtractPlugin({ filename: &#39;css/[name].css&#39;, }) 配置插件</li><li>MiniCssExtractPlugin.loader 使用 loader</li></ul></li><li>optimize-css-assets-webpack-plugin 优化打包后的 css 代码</li><li>html-webpack-plugin</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const MiniCssExtractPlugin = require(&#39;mini-css-extract-plugin&#39;);\nconst OptimizeCssAssetsPlugin = require(&#39;optimize-css-assets-webpack-plugin&#39;);\nconst HtmlWebpackPlugin = require(&#39;html-webpack-plugin&#39;)\n\n\nmodule.exports = {\n  rules: [\n    {\n      test: /\\.css$/,\n        use: [\n          MiniCssExtractPlugin.loader,\n        ],\n    }\n  ],\n  plugins: [\n    new MiniCssExtractPlugin({\n      filename: &#39;css/[name].css&#39;,\n    }),\n    new OptimizeCssAssetsPlugin(),\n    new HtmlWebpackPlugin({\n      filename: &#39;index.html&#39;, // 打包后的名字(路径)\n      templace: &#39;templace/index.html&#39;, // 打包生成的模版文件(路径)\n      inject: false, // 是否注入打包后js,css文件到index.html中\n      minify: {\n        collapseWhitespace: true // 是否压缩打包后的index.html\n         removeComments: true, // 是否去除注释\n  removeScriptTypeAttributes: true, // 去除多余script属性\n  removeStyleLinkTypeAttributes: true, // 去除多余style属性\n      }\n    })\n  ]\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h3 id="多文件" tabindex="-1"><a class="header-anchor" href="#多文件" aria-hidden="true">#</a> 多文件</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module.exports = {\n  mode: &quot;development&quot;,\n  entry: {\n    one: &#39;./src/one.js&#39;,\n    two: &#39;./src/two.js&#39;,\n  },\n  output: {\n    filename: &#39;js/[name].js&#39;, // 使用占位符，多文件打包到不同的文件出楼\n  },\n  plugins: [\n    new MiniCssExtractPlugin({\n      filename: &#39;css/[name].css&#39;, // 同理\n    }),\n    // 生成多个html文件\n    new HtmlWebpackPlugin({\n      filename: &#39;one.html&#39;,\n      chunks: [&#39;one&#39;] // 注入指定js,css文件\n    }),\n    new HtmlWebpackPlugin({\n      filename: &#39;two.html&#39;,\n      chunks: [&#39;two&#39;]\n    })\n  ]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="webpack-dev-server" tabindex="-1"><a class="header-anchor" href="#webpack-dev-server" aria-hidden="true">#</a> webpack-dev-server</h3><p>想要配置 proxy 代理需要安装 webpack-dev-server</p><ul><li><p>命令 npxw webpack-dev-server</p><ul><li>开启端口可以自动访问同级目录下的资源</li></ul></li><li><p>配置</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module.exports = {\n  devServer: {\n    open: true, // 是否打开浏览器\n    port: 5000, // 端口\n    contentBase: &quot;./dist&quot;, // 修改可访问的文件路径\n    proxy: {\n      // 代理所有当前路径向/api的请求，将其转发到另一个路径\n      &quot;/api&quot;: {\n        target: &quot;https://xxx.xxx.xxx:0000&quot;, // 转发地址\n        pathRewrite: { &quot;/api&quot;: &quot;&quot; }, // 路径重写\n      },\n      &quot;/api1&quot;: &quot;https://xxx.xxx.xxx:1111&quot;,\n    },\n  },\n};\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><ul><li>before 前端 mock 假数据</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module.exports = {\n  devServer: {\n    open: true,\n    port: 5000,\n    contentBase: &#39;./dist&#39;,\n    before(app){\n      app.get(&#39;/api/user&#39;, (req,res)=&gt;{\n        res.send({name: &#39;user&#39;})\n      })\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>webpack-dev-server 运行遇到的问题</li></ul><div class="language-cmd ext-cmd line-numbers-mode"><pre class="language-cmd"><code>Cannot find module &#39;webpack-cli/bin/config-yargs&#39;\n可能是webpack和webpack-dev-server版本不兼容\nwebpack@3.8.0 和 webpack-dev-server@2.9.7可以兼容\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="webpack-dev-middleware" tabindex="-1"><a class="header-anchor" href="#webpack-dev-middleware" aria-hidden="true">#</a> webpack-dev-middleware</h3><ul><li>在 node 中启动 webpack 打包</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const express = require(&quot;express&quot;);\nconst webpack = require(&quot;webpack&quot;);\nconst middleware = require(&quot;webpack-dev-middleware&quot;);\n\n// 导入webpack配置\nconst config = require(&quot;./webpack.config.js&quot;);\nconst compiler = webpack(config);\n\nconst app = express();\n\n// 使用webpack编译器配置\napp.use(middleware(compiler));\n\napp.get(&quot;/api/user&quot;, (req, res) =&gt; {\n  res.send({ name: &quot;user&quot; });\n});\n\napp.listen(3000, () =&gt; {\n  console.log(&quot;3000 port opened&quot;);\n});\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="clean-webpack-plugin" tabindex="-1"><a class="header-anchor" href="#clean-webpack-plugin" aria-hidden="true">#</a> clean-webpack-plugin</h3><ul><li>每次打包前清空打包文件</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const { CleanWebpackPlugin } = require(&quot;clean-webpack-plugin&quot;);\nmodule.exports = {\n  plugins: [new CleanWebpackPlugin()],\n};\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="webpack-defineplugin" tabindex="-1"><a class="header-anchor" href="#webpack-defineplugin" aria-hidden="true">#</a> webpack.DefinePlugin</h3><ul><li>给入口文件注入变量</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const DEV = &quot;development&quot;;\nconst NEV = { data: &quot;webpack data&quot; };\n\nconst webpack = require(&quot;webpack&quot;);\nmodule.exports = {\n  plugins: [\n    new webpack.DefinePlugin({\n      DEV: &quot;DEV&quot;, // &quot;&quot; 中引用的是变量\n      NEV: &quot;NEV&quot;,\n    }),\n  ],\n};\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="打包-vue" tabindex="-1"><a class="header-anchor" href="#打包-vue" aria-hidden="true">#</a> 打包 vue</h2><ul><li>配置文件</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const path = require(&quot;path&quot;);\n\nconst HtmlWebpackPlugin = require(&quot;html-webpack-plugin&quot;);\n// 解析vue文件的插件\nconst VueLoaderPlugin = require(&quot;vue-loader/lib/plugin&quot;);\n\nmodule.exports = {\n  mode: &quot;production&quot;,\n  entry: &quot;./src/index.js&quot;,\n  output: {\n    filename: &quot;./js/main.js&quot;,\n    path: path.join(__dirname, &quot;./dist&quot;),\n  },\n  module: {\n    rules: [\n      {\n        // 配置解析vue的loader\n        test: /\\.vue$/,\n        use: [&quot;vue-loader&quot;],\n      },\n    ],\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      filename: &quot;index.html&quot;,\n      template: &quot;./build/template/template.html&quot;,\n    }),\n    new VueLoaderPlugin(), // 使用插件\n  ],\n  resolve: {\n    alias: {\n      // 配置引入包的路径\n      // 引入vue包时导入有template complier的包\n      vue$: &quot;vue/dist/vue.esm.js&quot;,\n    },\n  },\n};\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h2 id="不同环境配置文件" tabindex="-1"><a class="header-anchor" href="#不同环境配置文件" aria-hidden="true">#</a> 不同环境配置文件</h2><ul><li>webpack.base.js 基础配置</li><li>webpack.dev.js 开发环境配置</li><li>webpack.pro.js 生产环境配置</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const proConfig = {\n  mode: &quot;production&quot;,\n};\nconst devConfig = {\n  mode: &quot;development&quot;,\n  devServer: {},\n};\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>webpack-merge 合并配置</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const merge = require(&quot;webpack-merge&quot;);\nconst baseConfig = require(&quot;./webpack.base&quot;);\nconst devConfig = {\n  mode: &quot;development&quot;,\n  devServer: {},\n};\nmodule.exports = merge(baseConfig, devConfig);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>package.json</li></ul><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code>{\n  &quot;build&quot;: &quot;webpack --config webpack.pro.js&quot;,\n  &quot;dev&quot;: &quot;webpack-dev-server --config webpack.dev.js&quot;\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="code-spliting" tabindex="-1"><a class="header-anchor" href="#code-spliting" aria-hidden="true">#</a> code spliting</h2><ul><li>将第三方模块包和义务代码分离</li><li>webpack 不会分割同步代码，但会默认分割异步代码</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module.exports = {\n  optimizition: {\n    // 优化\n    splitChunks: {\n      // 分割代码\n      chunks: &quot;all&quot;, // 分割规则\n    },\n  },\n};\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>异步引入第三方包，第三方包一般同步引入</li><li>思考：首屏优化，异步引入 js 文件</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const axios = () =&gt; import(&quot;axios&quot;);\nimport(&quot;axios&quot;);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>使用 async await 导入的包会被打包到另一个 js 文件，算异步引入</li><li>思考：使用 await 算异步引入，可以做优化</li><li>使用 require 为同步引入</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>// 同步\nimport clickSync from &quot;./js/click&quot;;\n// 异步\nconst clickPromise = import(&quot;./js/click&quot;);\nconst { default: clickFn } = await clickPromise;\n// 同步\nconst { default: clickRequire } = require(&quot;./js/click&quot;);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="loader" tabindex="-1"><a class="header-anchor" href="#loader" aria-hidden="true">#</a> loader</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module.exports = {\n  resolveLoader: {\n    // 解析loader时的路径，在所有路径中寻找loader\n    modules: [&quot;node_modules&quot;, path.join(__dirname, &quot;loaders&quot;)],\n  },\n};\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="loader-实现" tabindex="-1"><a class="header-anchor" href="#loader-实现" aria-hidden="true">#</a> loader 实现</h3><ul><li>loaderUtils -- loader 的工具包</li><li>babel-loader</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const babel = require(&quot;@babel/core&quot;);\nconst loaderUtils = require(&quot;loader-utils&quot;);\nfunction loader(source) {\n  // source 为打包js的源代码\n  // 告诉loader将会异步执行代码 并通过callBack返回数据\n  const callBack = this.async();\n  // presets 预制：解析代码的babel的核心包\n  const { presets } = loaderUtils.getOptions(this);\n  // transform 解析\n  babel.transform(source, { presets }, (err, result) =&gt; {\n    // 解析结束执行回调函数\n    callBack(err, result);\n  });\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li>file-loader <ul><li>loader 默认解析 js 文件</li><li>当其他文件时(source)源码会乱码</li><li>loader.raw 解析二进制文件</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const loaderUtils = require(&quot;loader-utils&quot;);\n\nfunction loader(source) {\n  // 生成图片的名字\n  const filename = loaderUtils.interpolateName(this, &quot;[hash].[ext]&quot;, {\n    content: source,\n  });\n  // 生成图片\n  this.emitFile(filename, source);\n  return `module.exports=${JSON.stringify(filename)}`;\n}\nloader.raw = true;\nmodule.exports = loader;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>url-loader</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const loaderUtils = require(&quot;loader-utils&quot;);\nconst path = require(&quot;path&quot;);\nfunction loader(source) {\n  // const\n  const { limit } = loaderUtils.getOptions(&quot;this&quot;);\n  // path.extname 获取后缀名\n  // this.resourcePath 文件绝对路径\n  const extname = path.extname(this.resourcePath).slice(1);\n  let result = &quot;&quot;;\n  if (source.length &lt; limit) {\n    const base64 = source.toString(&quot;base64&quot;);\n    result = `module.exports = &quot;data:image/${extname};base64,${base64}&quot;`;\n  } else {\n    // 大于limit文件大小限制时使用file-loader处理文件\n    result = require(&quot;file-loader&quot;).call(this, source);\n  }\n  return result;\n}\nloader.raw = true;\nmodule.exports = loader;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h2><h3 id="webpack-问题" tabindex="-1"><a class="header-anchor" href="#webpack-问题" aria-hidden="true">#</a> webpack 问题</h3><ul><li>webpack@3.8.0 和 webpack-dev-server@2.9.7可以兼容，但是和html-webpack-plugin@4.5.1不兼容</li><li>使用老版本的 webpack 不支持 mode 属性</li></ul><div class="language-npm ext-npm line-numbers-mode"><pre class="language-npm"><code>configuration has an unknown property &#39;mode&#39;.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>使用最新版找不到包</li></ul><div class="language-npm ext-npm line-numbers-mode"><pre class="language-npm"><code>{\n  &quot;webpack&quot;: &quot;^5.13.0&quot;,\n  &quot;webpack-cli&quot;: &quot;^4.3.1&quot;,\n  &quot;webpack-dev-server&quot;: &quot;^3.11.1&quot;\n}\nerror: Cannot find module &#39;webpack-cli/bin/config-yargs&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',64),l={},r=(0,e(3744).Z)(l,[["render",function(n,s){return a}]])},3744:(n,s)=>{s.Z=(n,s)=>{const e=n.__vccOpts||n;for(const[n,a]of s)e[n]=a;return e}}}]);